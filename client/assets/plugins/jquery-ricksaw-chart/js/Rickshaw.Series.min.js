Rickshaw.namespace("Rickshaw.Series"),Rickshaw.Series=Rickshaw.Class.create(Array,{initialize:function(l,e,t){t=t||{},this.palette=new Rickshaw.Color.Palette(e),this.timeBase="undefined"==typeof t.timeBase?Math.floor((new Date).getTime()/1e3):t.timeBase;var n="undefined"==typeof t.timeInterval?1e3:t.timeInterval;this.setTimeInterval(n),l&&"object"==typeof l&&Array.isArray(l)&&l.forEach(function(l){this.addItem(l)},this)},addItem:function(l){if("undefined"==typeof l.name)throw"addItem() needs a name";l.color=l.color||this.palette.color(l.name),l.data=l.data||[],0===l.data.length&&this.length&&this.getIndex()>0?this[0].data.forEach(function(e){l.data.push({x:e.x,y:0})}):0===l.data.length&&l.data.push({x:this.timeBase-(this.timeInterval||0),y:0}),this.push(l),this.legend&&this.legend.addLine(this.itemByName(l.name))},addData:function(l,e){var t=this.getIndex();Rickshaw.keys(l).forEach(function(l){this.itemByName(l)||this.addItem({name:l})},this),this.forEach(function(n){n.data.push({x:e||(t*this.timeInterval||1)+this.timeBase,y:l[n.name]||0})},this)},getIndex:function(){return this[0]&&this[0].data&&this[0].data.length?this[0].data.length:0},itemByName:function(l){for(var e=0;e<this.length;e++)if(this[e].name==l)return this[e]},setTimeInterval:function(l){this.timeInterval=l/1e3},setTimeBase:function(l){this.timeBase=l},dump:function(){var l={timeBase:this.timeBase,timeInterval:this.timeInterval,items:[]};return this.forEach(function(e){var t={color:e.color,name:e.name,data:[]};e.data.forEach(function(l){t.data.push({x:l.x,y:l.y})}),l.items.push(t)}),l},load:function(l){l.timeInterval&&(this.timeInterval=l.timeInterval),l.timeBase&&(this.timeBase=l.timeBase),l.items&&l.items.forEach(function(l){this.push(l),this.legend&&this.legend.addLine(this.itemByName(l.name))},this)}}),Rickshaw.Series.zeroFill=function(l){Rickshaw.Series.fill(l,0)},Rickshaw.Series.fill=function(l,e){for(var t,n=0,i=l.map(function(l){return l.data});n<Math.max.apply(null,i.map(function(l){return l.length}));)t=Math.min.apply(null,i.filter(function(l){return l[n]}).map(function(l){return l[n].x})),i.forEach(function(l){l[n]&&l[n].x==t||l.splice(n,0,{x:t,y:e})}),n++};